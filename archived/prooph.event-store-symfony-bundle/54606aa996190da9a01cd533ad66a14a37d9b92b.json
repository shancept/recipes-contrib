{
    "manifests": {
        "prooph/event-store-symfony-bundle": {
            "manifest": {
                "bundles": {
                    "Prooph\\Bundle\\EventStore\\ProophEventStoreBundle": [
                        "all"
                    ]
                },
                "copy-from-recipe": {
                    "config/": "%CONFIG_DIR%/",
                    "src/": "%SRC_DIR%/"
                }
            },
            "files": {
                "config/packages/prooph_event_store.yaml": {
                    "contents": [
                        "prooph_event_store:",
                        "    stores:",
                        "        default:",
                        "            event_store: 'app.event_store.default'",
                        "",
                        "services:",
                        "    _defaults:",
                        "        public: false",
                        "",
                        "    Prooph\\EventSourcing\\EventStoreIntegration\\AggregateTranslator: ~",
                        ""
                    ],
                    "executable": false
                },
                "src/Command/CreateEventStreamCommand.php": {
                    "contents": [
                        "<?php",
                        "",
                        "declare(strict_types=1);",
                        "",
                        "namespace App\\Command;",
                        "",
                        "use Prooph\\EventStore\\EventStore;",
                        "use Prooph\\EventStore\\Stream;",
                        "use Prooph\\EventStore\\StreamName;",
                        "use Symfony\\Bundle\\FrameworkBundle\\Command\\ContainerAwareCommand;",
                        "use Symfony\\Component\\Console\\Input\\InputInterface;",
                        "use Symfony\\Component\\Console\\Output\\OutputInterface;",
                        "",
                        "final class CreateEventStreamCommand extends ContainerAwareCommand",
                        "{",
                        "    private $eventStore;",
                        "",
                        "    public function __construct(EventStore $eventStore)",
                        "    {",
                        "        $this->eventStore = $eventStore;",
                        "    }",
                        "",
                        "    protected function configure()",
                        "    {",
                        "        $this->setName('event-store:event-stream:create')",
                        "            ->setDescription('Create event_stream.')",
                        "            ->setHelp('This command creates the event_stream');",
                        "    }",
                        "",
                        "    protected function execute(InputInterface $input, OutputInterface $output)",
                        "    {",
                        "        $this->eventStore->create(new Stream(new StreamName('event_stream'), new \\ArrayIterator([])));",
                        "",
                        "        $output->writeln('<info>Event stream was created successfully.</info>');",
                        "    }",
                        "}",
                        ""
                    ],
                    "executable": false
                }
            },
            "ref": "54606aa996190da9a01cd533ad66a14a37d9b92b"
        }
    }
}
